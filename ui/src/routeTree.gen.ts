/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AppRouteImport } from './routes/_app/route'
import { Route as AppIndexImport } from './routes/_app/index'
import { Route as AuthResetImport } from './routes/auth_/reset'
import { Route as AuthRegistersuccessImport } from './routes/auth_/register_success'
import { Route as AuthRegisterImport } from './routes/auth_/register'
import { Route as AuthLogoutImport } from './routes/auth_/logout'
import { Route as AuthLoginImport } from './routes/auth_/login'
import { Route as AppTeamsImport } from './routes/_app/teams'
import { Route as AppSettingsImport } from './routes/_app/settings'
import { Route as AppProjectsImport } from './routes/_app/projects'
import { Route as TeamsTeamIdRouteImport } from './routes/teams_.$teamId/route'
import { Route as ProjectsProjectIdRouteImport } from './routes/projects_.$projectId/route'
import { Route as TeamsTeamIdIndexImport } from './routes/teams_.$teamId/index'
import { Route as ProjectsProjectIdIndexImport } from './routes/projects_.$projectId/index'
import { Route as TeamsTeamIdSettingsImport } from './routes/teams_.$teamId/settings'
import { Route as TeamsTeamIdProjectsImport } from './routes/teams_.$teamId/projects'
import { Route as ProjectsProjectIdStacksImport } from './routes/projects_.$projectId/stacks'
import { Route as ProjectsProjectIdSettingsImport } from './routes/projects_.$projectId/settings'
import { Route as ProjectsProjectIdDocumentsImport } from './routes/projects_.$projectId/documents'
import { Route as ProjectsProjectIdChatsImport } from './routes/projects_.$projectId/chats'
import { Route as ProjectsProjectIdStacksStackIdImport } from './routes/projects_.$projectId/stacks_.$stackId'
import { Route as ProjectsProjectIdDocumentsDocumentIdImport } from './routes/projects_.$projectId/documents_.$documentId'
import { Route as ProjectsProjectIdChatsChatIdImport } from './routes/projects_.$projectId/chats_.$chatId'
import { Route as ProjectsProjectIdStacksStackIdDossiersdossierIdImport } from './routes/projects_.$projectId/stacks_.$stackId_.dossiers_$dossierId'
import { Route as ProjectsProjectIdStacksStackIdDossiersImport } from './routes/projects_.$projectId/stacks_.$stackId_.dossiers'

// Create/Update Routes

const AppRouteRoute = AppRouteImport.update({
  id: '/_app',
  getParentRoute: () => rootRoute,
} as any)

const AppIndexRoute = AppIndexImport.update({
  path: '/',
  getParentRoute: () => AppRouteRoute,
} as any)

const AuthResetRoute = AuthResetImport.update({
  path: '/auth/reset',
  getParentRoute: () => rootRoute,
} as any)

const AuthRegistersuccessRoute = AuthRegistersuccessImport.update({
  path: '/auth/register_success',
  getParentRoute: () => rootRoute,
} as any)

const AuthRegisterRoute = AuthRegisterImport.update({
  path: '/auth/register',
  getParentRoute: () => rootRoute,
} as any)

const AuthLogoutRoute = AuthLogoutImport.update({
  path: '/auth/logout',
  getParentRoute: () => rootRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  path: '/auth/login',
  getParentRoute: () => rootRoute,
} as any)

const AppTeamsRoute = AppTeamsImport.update({
  path: '/teams',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppSettingsRoute = AppSettingsImport.update({
  path: '/settings',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppProjectsRoute = AppProjectsImport.update({
  path: '/projects',
  getParentRoute: () => AppRouteRoute,
} as any)

const TeamsTeamIdRouteRoute = TeamsTeamIdRouteImport.update({
  path: '/teams/$teamId',
  getParentRoute: () => rootRoute,
} as any)

const ProjectsProjectIdRouteRoute = ProjectsProjectIdRouteImport.update({
  path: '/projects/$projectId',
  getParentRoute: () => rootRoute,
} as any)

const TeamsTeamIdIndexRoute = TeamsTeamIdIndexImport.update({
  path: '/',
  getParentRoute: () => TeamsTeamIdRouteRoute,
} as any)

const ProjectsProjectIdIndexRoute = ProjectsProjectIdIndexImport.update({
  path: '/',
  getParentRoute: () => ProjectsProjectIdRouteRoute,
} as any)

const TeamsTeamIdSettingsRoute = TeamsTeamIdSettingsImport.update({
  path: '/settings',
  getParentRoute: () => TeamsTeamIdRouteRoute,
} as any)

const TeamsTeamIdProjectsRoute = TeamsTeamIdProjectsImport.update({
  path: '/projects',
  getParentRoute: () => TeamsTeamIdRouteRoute,
} as any)

const ProjectsProjectIdStacksRoute = ProjectsProjectIdStacksImport.update({
  path: '/stacks',
  getParentRoute: () => ProjectsProjectIdRouteRoute,
} as any)

const ProjectsProjectIdSettingsRoute = ProjectsProjectIdSettingsImport.update({
  path: '/settings',
  getParentRoute: () => ProjectsProjectIdRouteRoute,
} as any)

const ProjectsProjectIdDocumentsRoute = ProjectsProjectIdDocumentsImport.update(
  {
    path: '/documents',
    getParentRoute: () => ProjectsProjectIdRouteRoute,
  } as any,
)

const ProjectsProjectIdChatsRoute = ProjectsProjectIdChatsImport.update({
  path: '/chats',
  getParentRoute: () => ProjectsProjectIdRouteRoute,
} as any)

const ProjectsProjectIdStacksStackIdRoute =
  ProjectsProjectIdStacksStackIdImport.update({
    path: '/stacks/$stackId',
    getParentRoute: () => ProjectsProjectIdRouteRoute,
  } as any)

const ProjectsProjectIdDocumentsDocumentIdRoute =
  ProjectsProjectIdDocumentsDocumentIdImport.update({
    path: '/documents/$documentId',
    getParentRoute: () => ProjectsProjectIdRouteRoute,
  } as any)

const ProjectsProjectIdChatsChatIdRoute =
  ProjectsProjectIdChatsChatIdImport.update({
    path: '/chats/$chatId',
    getParentRoute: () => ProjectsProjectIdRouteRoute,
  } as any)

const ProjectsProjectIdStacksStackIdDossiersdossierIdRoute =
  ProjectsProjectIdStacksStackIdDossiersdossierIdImport.update({
    path: '/stacks/$stackId/dossiers_$dossierId',
    getParentRoute: () => ProjectsProjectIdRouteRoute,
  } as any)

const ProjectsProjectIdStacksStackIdDossiersRoute =
  ProjectsProjectIdStacksStackIdDossiersImport.update({
    path: '/stacks/$stackId/dossiers',
    getParentRoute: () => ProjectsProjectIdRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppRouteImport
      parentRoute: typeof rootRoute
    }
    '/projects/$projectId': {
      id: '/projects/$projectId'
      path: '/projects/$projectId'
      fullPath: '/projects/$projectId'
      preLoaderRoute: typeof ProjectsProjectIdRouteImport
      parentRoute: typeof rootRoute
    }
    '/teams/$teamId': {
      id: '/teams/$teamId'
      path: '/teams/$teamId'
      fullPath: '/teams/$teamId'
      preLoaderRoute: typeof TeamsTeamIdRouteImport
      parentRoute: typeof rootRoute
    }
    '/_app/projects': {
      id: '/_app/projects'
      path: '/projects'
      fullPath: '/projects'
      preLoaderRoute: typeof AppProjectsImport
      parentRoute: typeof AppRouteImport
    }
    '/_app/settings': {
      id: '/_app/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AppSettingsImport
      parentRoute: typeof AppRouteImport
    }
    '/_app/teams': {
      id: '/_app/teams'
      path: '/teams'
      fullPath: '/teams'
      preLoaderRoute: typeof AppTeamsImport
      parentRoute: typeof AppRouteImport
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof rootRoute
    }
    '/auth/logout': {
      id: '/auth/logout'
      path: '/auth/logout'
      fullPath: '/auth/logout'
      preLoaderRoute: typeof AuthLogoutImport
      parentRoute: typeof rootRoute
    }
    '/auth/register': {
      id: '/auth/register'
      path: '/auth/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthRegisterImport
      parentRoute: typeof rootRoute
    }
    '/auth/register_success': {
      id: '/auth/register_success'
      path: '/auth/register_success'
      fullPath: '/auth/register_success'
      preLoaderRoute: typeof AuthRegistersuccessImport
      parentRoute: typeof rootRoute
    }
    '/auth/reset': {
      id: '/auth/reset'
      path: '/auth/reset'
      fullPath: '/auth/reset'
      preLoaderRoute: typeof AuthResetImport
      parentRoute: typeof rootRoute
    }
    '/_app/': {
      id: '/_app/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AppIndexImport
      parentRoute: typeof AppRouteImport
    }
    '/projects/$projectId/chats': {
      id: '/projects/$projectId/chats'
      path: '/chats'
      fullPath: '/projects/$projectId/chats'
      preLoaderRoute: typeof ProjectsProjectIdChatsImport
      parentRoute: typeof ProjectsProjectIdRouteImport
    }
    '/projects/$projectId/documents': {
      id: '/projects/$projectId/documents'
      path: '/documents'
      fullPath: '/projects/$projectId/documents'
      preLoaderRoute: typeof ProjectsProjectIdDocumentsImport
      parentRoute: typeof ProjectsProjectIdRouteImport
    }
    '/projects/$projectId/settings': {
      id: '/projects/$projectId/settings'
      path: '/settings'
      fullPath: '/projects/$projectId/settings'
      preLoaderRoute: typeof ProjectsProjectIdSettingsImport
      parentRoute: typeof ProjectsProjectIdRouteImport
    }
    '/projects/$projectId/stacks': {
      id: '/projects/$projectId/stacks'
      path: '/stacks'
      fullPath: '/projects/$projectId/stacks'
      preLoaderRoute: typeof ProjectsProjectIdStacksImport
      parentRoute: typeof ProjectsProjectIdRouteImport
    }
    '/teams/$teamId/projects': {
      id: '/teams/$teamId/projects'
      path: '/projects'
      fullPath: '/teams/$teamId/projects'
      preLoaderRoute: typeof TeamsTeamIdProjectsImport
      parentRoute: typeof TeamsTeamIdRouteImport
    }
    '/teams/$teamId/settings': {
      id: '/teams/$teamId/settings'
      path: '/settings'
      fullPath: '/teams/$teamId/settings'
      preLoaderRoute: typeof TeamsTeamIdSettingsImport
      parentRoute: typeof TeamsTeamIdRouteImport
    }
    '/projects/$projectId/': {
      id: '/projects/$projectId/'
      path: '/'
      fullPath: '/projects/$projectId/'
      preLoaderRoute: typeof ProjectsProjectIdIndexImport
      parentRoute: typeof ProjectsProjectIdRouteImport
    }
    '/teams/$teamId/': {
      id: '/teams/$teamId/'
      path: '/'
      fullPath: '/teams/$teamId/'
      preLoaderRoute: typeof TeamsTeamIdIndexImport
      parentRoute: typeof TeamsTeamIdRouteImport
    }
    '/projects/$projectId/chats/$chatId': {
      id: '/projects/$projectId/chats/$chatId'
      path: '/chats/$chatId'
      fullPath: '/projects/$projectId/chats/$chatId'
      preLoaderRoute: typeof ProjectsProjectIdChatsChatIdImport
      parentRoute: typeof ProjectsProjectIdRouteImport
    }
    '/projects/$projectId/documents/$documentId': {
      id: '/projects/$projectId/documents/$documentId'
      path: '/documents/$documentId'
      fullPath: '/projects/$projectId/documents/$documentId'
      preLoaderRoute: typeof ProjectsProjectIdDocumentsDocumentIdImport
      parentRoute: typeof ProjectsProjectIdRouteImport
    }
    '/projects/$projectId/stacks/$stackId': {
      id: '/projects/$projectId/stacks/$stackId'
      path: '/stacks/$stackId'
      fullPath: '/projects/$projectId/stacks/$stackId'
      preLoaderRoute: typeof ProjectsProjectIdStacksStackIdImport
      parentRoute: typeof ProjectsProjectIdRouteImport
    }
    '/projects/$projectId/stacks/$stackId/dossiers': {
      id: '/projects/$projectId/stacks/$stackId/dossiers'
      path: '/stacks/$stackId/dossiers'
      fullPath: '/projects/$projectId/stacks/$stackId/dossiers'
      preLoaderRoute: typeof ProjectsProjectIdStacksStackIdDossiersImport
      parentRoute: typeof ProjectsProjectIdRouteImport
    }
    '/projects/$projectId/stacks/$stackId/dossiers_$dossierId': {
      id: '/projects/$projectId/stacks/$stackId/dossiers_$dossierId'
      path: '/stacks/$stackId/dossiers_$dossierId'
      fullPath: '/projects/$projectId/stacks/$stackId/dossiers_$dossierId'
      preLoaderRoute: typeof ProjectsProjectIdStacksStackIdDossiersdossierIdImport
      parentRoute: typeof ProjectsProjectIdRouteImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  AppRouteRoute: AppRouteRoute.addChildren({
    AppProjectsRoute,
    AppSettingsRoute,
    AppTeamsRoute,
    AppIndexRoute,
  }),
  ProjectsProjectIdRouteRoute: ProjectsProjectIdRouteRoute.addChildren({
    ProjectsProjectIdChatsRoute,
    ProjectsProjectIdDocumentsRoute,
    ProjectsProjectIdSettingsRoute,
    ProjectsProjectIdStacksRoute,
    ProjectsProjectIdIndexRoute,
    ProjectsProjectIdChatsChatIdRoute,
    ProjectsProjectIdDocumentsDocumentIdRoute,
    ProjectsProjectIdStacksStackIdRoute,
    ProjectsProjectIdStacksStackIdDossiersRoute,
    ProjectsProjectIdStacksStackIdDossiersdossierIdRoute,
  }),
  TeamsTeamIdRouteRoute: TeamsTeamIdRouteRoute.addChildren({
    TeamsTeamIdProjectsRoute,
    TeamsTeamIdSettingsRoute,
    TeamsTeamIdIndexRoute,
  }),
  AuthLoginRoute,
  AuthLogoutRoute,
  AuthRegisterRoute,
  AuthRegistersuccessRoute,
  AuthResetRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_app",
        "/projects/$projectId",
        "/teams/$teamId",
        "/auth/login",
        "/auth/logout",
        "/auth/register",
        "/auth/register_success",
        "/auth/reset"
      ]
    },
    "/_app": {
      "filePath": "_app/route.tsx",
      "children": [
        "/_app/projects",
        "/_app/settings",
        "/_app/teams",
        "/_app/"
      ]
    },
    "/projects/$projectId": {
      "filePath": "projects_.$projectId/route.tsx",
      "children": [
        "/projects/$projectId/chats",
        "/projects/$projectId/documents",
        "/projects/$projectId/settings",
        "/projects/$projectId/stacks",
        "/projects/$projectId/",
        "/projects/$projectId/chats/$chatId",
        "/projects/$projectId/documents/$documentId",
        "/projects/$projectId/stacks/$stackId",
        "/projects/$projectId/stacks/$stackId/dossiers",
        "/projects/$projectId/stacks/$stackId/dossiers_$dossierId"
      ]
    },
    "/teams/$teamId": {
      "filePath": "teams_.$teamId/route.tsx",
      "children": [
        "/teams/$teamId/projects",
        "/teams/$teamId/settings",
        "/teams/$teamId/"
      ]
    },
    "/_app/projects": {
      "filePath": "_app/projects.tsx",
      "parent": "/_app"
    },
    "/_app/settings": {
      "filePath": "_app/settings.tsx",
      "parent": "/_app"
    },
    "/_app/teams": {
      "filePath": "_app/teams.tsx",
      "parent": "/_app"
    },
    "/auth/login": {
      "filePath": "auth_/login.tsx"
    },
    "/auth/logout": {
      "filePath": "auth_/logout.tsx"
    },
    "/auth/register": {
      "filePath": "auth_/register.tsx"
    },
    "/auth/register_success": {
      "filePath": "auth_/register_success.tsx"
    },
    "/auth/reset": {
      "filePath": "auth_/reset.tsx"
    },
    "/_app/": {
      "filePath": "_app/index.tsx",
      "parent": "/_app"
    },
    "/projects/$projectId/chats": {
      "filePath": "projects_.$projectId/chats.tsx",
      "parent": "/projects/$projectId"
    },
    "/projects/$projectId/documents": {
      "filePath": "projects_.$projectId/documents.tsx",
      "parent": "/projects/$projectId"
    },
    "/projects/$projectId/settings": {
      "filePath": "projects_.$projectId/settings.tsx",
      "parent": "/projects/$projectId"
    },
    "/projects/$projectId/stacks": {
      "filePath": "projects_.$projectId/stacks.tsx",
      "parent": "/projects/$projectId"
    },
    "/teams/$teamId/projects": {
      "filePath": "teams_.$teamId/projects.tsx",
      "parent": "/teams/$teamId"
    },
    "/teams/$teamId/settings": {
      "filePath": "teams_.$teamId/settings.tsx",
      "parent": "/teams/$teamId"
    },
    "/projects/$projectId/": {
      "filePath": "projects_.$projectId/index.tsx",
      "parent": "/projects/$projectId"
    },
    "/teams/$teamId/": {
      "filePath": "teams_.$teamId/index.tsx",
      "parent": "/teams/$teamId"
    },
    "/projects/$projectId/chats/$chatId": {
      "filePath": "projects_.$projectId/chats_.$chatId.tsx",
      "parent": "/projects/$projectId"
    },
    "/projects/$projectId/documents/$documentId": {
      "filePath": "projects_.$projectId/documents_.$documentId.tsx",
      "parent": "/projects/$projectId"
    },
    "/projects/$projectId/stacks/$stackId": {
      "filePath": "projects_.$projectId/stacks_.$stackId.tsx",
      "parent": "/projects/$projectId"
    },
    "/projects/$projectId/stacks/$stackId/dossiers": {
      "filePath": "projects_.$projectId/stacks_.$stackId_.dossiers.tsx",
      "parent": "/projects/$projectId"
    },
    "/projects/$projectId/stacks/$stackId/dossiers_$dossierId": {
      "filePath": "projects_.$projectId/stacks_.$stackId_.dossiers_$dossierId.tsx",
      "parent": "/projects/$projectId"
    }
  }
}
ROUTE_MANIFEST_END */
